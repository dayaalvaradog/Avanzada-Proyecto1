@{
    ViewData["Title"] = "Registrarse";
}

<h1>Registrarse</h1>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h3>Datos del usuario</h3>
            </div>
            <div class="card-body">
                <form id="NewProfileForm">
                    <div class="form-group">
                        <label for="nombre">Nombre:</label>
                        <input type="text" class="form-control" id="nombre" name="Nombre" required>
                    </div>
                    <div class="form-group">
                        <label for="apellido">Apellido:</label>
                        <input type="text" class="form-control" id="apellido" name="Apellido" required>
                    </div>
                    <div class="form-group">
                        <label for="correo">Correo Electrónico:</label>
                        <input type="email" class="form-control" id="correo" name="Correo" required>
                    </div>
                    <div class="form-group">
                        <label for="contrasena">Contraseña:</label>
                        <input type="password" class="form-control" id="contrasena" name="HashContrasena" required>
                    </div>
                    <div class="form-group" id="rolGroup" style="display:none;">
                        <label for="rol">Rol:</label>
                        <select class="form-control" id="rol" name="Rol">
                            <option value="Empleado">Empleado</option>
                        </select>
                    </div>

                    <br />
                    <button type="submit" class="btn btn-primary">Registrarme</button>
                    <div id="mensaje" class="mt-3"></div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('NewProfileForm').addEventListener('submit', async function(e) {
             e.preventDefault();

             const mensajeDiv = document.getElementById('mensaje');
             mensajeDiv.innerHTML = '';

             const formData = new FormData(this);
             const userData = Object.fromEntries(formData.entries());

             try {
                 const response = await fetch('https://localhost:44384/api/Usuario/RegistrarUsuario', {
                     method: 'POST',
                     mode:"cors",
                     headers: {
                         'Content-Type': 'application/json;charset=utf-8"'
                     },
                     body: JSON.stringify(userData)
                 });

                 if (response.ok) {
                     const result = await response.json();
                     mensajeDiv.className = 'alert alert-success';
                     mensajeDiv.innerHTML = `${result.nombre} ${result.apellido} se ha registrado correctamente con el ID: ${result.id}.`;
                     this.reset();
                 } else {
                     const errorData = await response.json();
                     mensajeDiv.className = 'alert alert-danger';
                     mensajeDiv.innerHTML = `Error al registrar colaborador: ${errorData.title || errorData.detail || JSON.stringify(errorData)}`;
                 }
             } catch (error) {
                 mensajeDiv.className = 'alert alert-danger';
                 mensajeDiv.innerHTML = `Ocurrió un error de red: ${error.message}`;
                 
             }
         });
    </script>
}