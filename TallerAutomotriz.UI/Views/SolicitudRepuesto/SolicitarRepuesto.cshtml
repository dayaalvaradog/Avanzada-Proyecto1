
@{
    ViewData["Title"] = "Solicitar Repuesto";
}

<h1>Solicitar Nuevo Repuesto</h1>

<div class="row">
    <div class="col-md-6">
        <form id="formNuevaSolicitudRepuesto">
            <div class="form-group">
                <label for="repuestoId">ID del Repuesto:</label>
                <input type="number" class="form-control" id="repuestoId" name="repuestoId" required>
                <small class="form-text text-muted">Ingresa el ID del repuesto que se está solicitando.</small>
            </div>
            <div class="form-group">
                <label for="solicitanteId">ID del Solicitante:</label>
                <input type="number" class="form-control" id="solicitanteId" name="solicitanteId" required disabled style="display:none">
                <small class="form-text text-muted">Ingresa el ID del usuario que solicita el repuesto.</small>
            </div>
            <div class="form-group">
                <label for="cantidadSolicitada">Cantidad Solicitada:</label>
                <input type="number" class="form-control" id="cantidadSolicitada" name="cantidadSolicitada" required min="1">
            </div>
            <div class="form-group">
                <label for="fechaSolicitud">Fecha de Solicitud:</label>
                <input type="date" class="form-control" id="fechaSolicitud" name="fechaSolicitud" required>
            </div>
            <div class="form-group">
                <label for="observaciones">Observaciones (Opcional):</label>
                <textarea class="form-control" id="observaciones" name="observaciones" rows="3"></textarea>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Enviar Solicitud</button>
        </form>
        <div id="mensaje" class="mt-3"></div>
    </div>
</div>

@section Scripts {
    <script>
        function getCurrentDate() {
            const today = new Date();
            const year = today.getFullYear();
            const month = (today.getMonth() + 1).toString().padStart(2, '0'); 
            const day = today.getDate().toString().padStart(2, '0');
            return `${year}-${month}-${day}`;
        }
        // Se obtiene los datos del usuario logueado
        function getLoggedInUserData() {
            const userDataString = localStorage.getItem('userData');
            return userDataString ? JSON.parse(userDataString) : null;
        }
        const loggedInUserData = getLoggedInUserData();
        const idUsuario = parseInt(loggedInUserData.id);

        document.addEventListener('DOMContentLoaded', (event) => {
            document.getElementById('fechaSolicitud').value = getCurrentDate();
        });

        document.getElementById('formNuevaSolicitudRepuesto').addEventListener('submit', async function(e) {
            e.preventDefault();

            const mensajeDiv = document.getElementById('mensaje');
            mensajeDiv.innerHTML = '';

            const formData = new FormData(this);
            const solicitudData = {
                idRepuesto: parseInt(formData.get('repuestoId')),
                idSolicitante: idUsuario,
                cantidadSolicitada: parseInt(formData.get('cantidadSolicitada')),
                fechaSolicitud: formData.get('fechaSolicitud'), // Formato YYYY-MM-DD
                observaciones: formData.get('observaciones') || null 
            };

            const API_BASE_URL = "https://localhost:7002";
            const apiUrl = `${API_BASE_URL}/api/SolicitudRepuesto/InsertarSolicitudRepuesto`;

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(solicitudData)
                });

                if (response.ok) {
                    const result = await response.json();
                    mensajeDiv.className = 'alert alert-success';
                    mensajeDiv.innerHTML = `Solicitud de repuesto ID ${result.id} creada exitosamente para el Repuesto ID ${result.repuestoId}.`;
                    this.reset(); 
                    document.getElementById('fechaSolicitud').value = getCurrentDate(); 
                } else {
                    const errorData = await response.json();
                    mensajeDiv.className = 'alert alert-danger';
                    let errorMessage = 'Error al enviar solicitud: ';
                    if (response.status === 400 && errorData.errors) { 
                        for (const key in errorData.errors) {
                            errorMessage += `${key}: ${errorData.errors[key].join(', ')} `;
                        }
                    } else { 
                        errorMessage += errorData.title || errorData.detail || JSON.stringify(errorData);
                    }
                    mensajeDiv.innerHTML = errorMessage;
                    console.error('Error del API:', errorData);
                }
            } catch (error) {
                console.error('Error de red al enviar la solicitud:', error);
                mensajeDiv.className = 'alert alert-danger';
                mensajeDiv.innerHTML = `Ocurrió un error de red: ${error.message}. Asegúrate de que la API está corriendo y las configuraciones de CORS son correctas.`;
            }
        });
    </script>
}
