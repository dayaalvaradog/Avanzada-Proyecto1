@{
    ViewData["Title"] = "Gestión de Colaboradores";
}

<h1>Gestión de Colaboradores</h1>

<div style="text-align: right;">
    <button class="btn btn-sm btn-success">
        <a class="nav-link text-light" asp-area="" asp-controller="Usuario" asp-action="CrearUsuario">Nuevo Colaborador</a>
    </button>
</div>


<div id="mensajeListaUsuarios" class="mt-3"></div>

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/2.0.8/css/dataTables.dataTables.min.css" />

<table id="usersTable" class="table table-striped table-hover">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Correo</th>
            <th>Rol</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody id="usersTableBody">
    </tbody>
</table>

@section Scripts {
    <script>
        const API_BASE_URL = "https://localhost:44384";
        const API_USUARIOS_URL = `${API_BASE_URL}/api/Usuario`;
        const usersTableBody = document.getElementById('usersTableBody');
        const mensajeListaUsuarios = document.getElementById('mensajeListaUsuarios');

        async function loadUsers() {
            try {
                const response = await fetch(`${API_USUARIOS_URL}/ObtenerUsuarios`);
                if (response.ok) {
                    const users = await response.json();
                    usersTableBody.innerHTML = ''; 
                    if (users.length === 0) {
                        mensajeListaUsuarios.className = 'alert alert-info';
                        mensajeListaUsuarios.innerHTML = 'No se encontraron usuarios.';
                        return;
                    }
                    users.forEach(user => {
                        const row = `
                            <tr>
                                <td>${user.id}</td>
                                <td>${user.nombre}</td>
                                <td>${user.apellido}</td>
                                <td>${user.correo}</td>
                                <td>${user.rol}</td>
                                <td>
                                    <button class="btn btn-sm btn-info edit-user" data-id="${user.id}">Editar</button>
                                    <button class="btn btn-sm btn-danger delete-user" data-id="${user.id}">Eliminar</button>
                                </td>
                            </tr>
                        `;
                        usersTableBody.innerHTML += row;
                    });

                    document.querySelectorAll('.edit-user').forEach(button => {
                        button.addEventListener('click', function() {
                            const userId = this.dataset.id;
                            window.location.href = `/Usuario/EditarUsuario/${userId}`; // Redirigir a la vista de edición
                        });
                    });

                    document.querySelectorAll('.delete-user').forEach(button => {
                        button.addEventListener('click', async function() {
                            const userId = this.dataset.id;
                            if (confirm(`¿Estás seguro de que quieres eliminar al usuario con ID ${userId}?`)) {
                                try {
                                    const deleteResponse = await fetch(`${API_USUARIOS_URL}/EliminarUsuario/${userId}`, {
                                        method: 'DELETE'
                                    });
                                    if (deleteResponse.ok) {
                                        mensajeListaUsuarios.className = 'alert alert-success';
                                        mensajeListaUsuarios.innerHTML = `Usuario ${userId} eliminado exitosamente.`;
                                        loadUsers(); // Recargar la lista
                                    } else {
                                        const errorData = await deleteResponse.json();
                                        mensajeListaUsuarios.className = 'alert alert-danger';
                                        mensajeListaUsuarios.innerHTML = `Error al eliminar usuario: ${errorData.message || JSON.stringify(errorData)}`;
                                        console.error('Error al eliminar:', errorData);
                                    }
                                } catch (error) {
                                    mensajeListaUsuarios.className = 'alert alert-danger';
                                    mensajeListaUsuarios.innerHTML = `Ocurrió un error de red al eliminar: ${error.message}.`;
                                    console.error('Error de red:', error);
                                }
                            }
                        });
                    });

                } else {
                    const errorData = await response.json();
                    mensajeListaUsuarios.className = 'alert alert-danger';
                    mensajeListaUsuarios.innerHTML = `Error al cargar usuarios: ${errorData.message || JSON.stringify(errorData)}`;
                    console.error('Error al cargar usuarios:', errorData);
                }
            } catch (error) {
                mensajeListaUsuarios.className = 'alert alert-danger';
                mensajeListaUsuarios.innerHTML = `Ocurrió un error de red: ${error.message}.`;
                console.error('Error de red:', error);
            }
        }

        loadUsers();
    </script>
}
