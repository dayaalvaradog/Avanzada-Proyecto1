@{
    ViewData["Title"] = "Editar Perfil";
}

<h1>Editar Perfil</h1>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h3>Información del Usuario</h3>
            </div>
            <div class="card-body">
                <form id="editProfileForm">
                    <input type="hidden" id="userId" name="Id" />
                    <input type="hidden" id="hashContrasena" name="HashContrasena" /> 
                    <div class="form-group">
                        <label for="nombre">Nombre:</label>
                        <input type="text" class="form-control" id="nombre" name="Nombre" required>
                    </div>
                    <div class="form-group">
                        <label for="apellido">Apellido:</label>
                        <input type="text" class="form-control" id="apellido" name="Apellido" required>
                    </div>
                    <div class="form-group">
                        <label for="correo">Correo Electrónico:</label>
                        <input type="email" class="form-control" id="correo" name="Correo" required>
                    </div>

                    <div class="form-group" id="rolGroup" style="display:none;">
                        <label for="rol">Rol:</label>
                        <select class="form-control" id="rol" name="Rol">
                            <option value="Administrador">Administrador</option>
                            <option value="EncargadoBodega">Encargado de Bodega</option>
                            <option value="Empleado">Empleado</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="nuevaContrasena">Nueva Contraseña (Dejar vacío para no cambiar):</label>
                        <input type="password" class="form-control" id="nuevaContrasena" name="NuevaContrasena">
                        <small class="form-text text-muted">Solo ingrese si desea cambiar la contraseña.</small>
                    </div>

                    <br />
                    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                    <div id="mensajeEdicion" class="mt-3"></div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const API_BASE_URL = "https://localhost:7002"; 
        const API_USUARIOS_URL = `${API_BASE_URL}/api/Usuario`;
        const mensajeEdicionDiv = document.getElementById('mensajeEdicion');
        const userIdField = document.getElementById('userId');
        const hashContrasenaField = document.getElementById('hashContrasena');
        const nuevaContrasenaField = document.getElementById('nuevaContrasena');
        const rolGroup = document.getElementById('rolGroup');
        const rolSelect = document.getElementById('rol');

        let currentUserId = null; 
        let loggedInUserRole = ''; 

        // Se obtiene los datos del usuario logueado
        function getLoggedInUserData() {
            const userDataString = localStorage.getItem('userData');
            return userDataString ? JSON.parse(userDataString) : null;
        }

        // Cargar datos del perfil al cargar la página
        document.addEventListener('DOMContentLoaded', async function () {
            const loggedInUserData = getLoggedInUserData();
            if (!loggedInUserData) {
                window.location.href = '/Account/Login';
                return;
            }
            loggedInUserRole = loggedInUserData.rol;

            let targetUserId = @Html.Raw(Json.Serialize(ViewContext.RouteData.Values["id"])); 
            if (!targetUserId) { // Si no hay ID en la URL, se coloca el propio perfil
                targetUserId = loggedInUserData.id;
            }

            currentUserId = targetUserId; // Se guarda el ID del usuario que estamos editando

            if (loggedInUserRole !== 'Administrador' && currentUserId !== loggedInUserData.id) {
                mensajeEdicionDiv.className = 'alert alert-danger';
                mensajeEdicionDiv.innerHTML = 'No tiene permisos para editar este perfil.';
                document.getElementById('editProfileForm').style.display = 'none'; // Ocultar formulario
                return;
            }

            if (loggedInUserRole === 'Administrador') {
                rolGroup.style.display = 'block';
            } else {
                rolGroup.style.display = 'none';
            }

            // Cargar datos del usuario
            try {
                const response = await fetch(`${API_USUARIOS_URL}/ObtenerUsuarioPorId/${currentUserId}`);
                if (response.ok) {
                    const user = await response.json();
                    userIdField.value = user.id;
                    document.getElementById('nombre').value = user.nombre;
                    document.getElementById('apellido').value = user.apellido;
                    document.getElementById('correo').value = user.correo;
                    hashContrasenaField.value = user.hashContrasena; // Almacenar el hash original
                    
                    if (loggedInUserRole === 'Administrador') {
                        rolSelect.value = user.rol;
                    }
                } else {
                    const errorData = await response.json();
                    mensajeEdicionDiv.className = 'alert alert-danger';
                    mensajeEdicionDiv.innerHTML = `Error al cargar perfil: ${errorData.message || JSON.stringify(errorData)}`;
                    document.getElementById('editProfileForm').style.display = 'none';
                }
            } catch (error) {
                mensajeEdicionDiv.className = 'alert alert-danger';
                mensajeEdicionDiv.innerHTML = `Ocurrió un error de red al cargar perfil: ${error.message}.`;
                document.getElementById('editProfileForm').style.display = 'none';
            }
        });

        document.getElementById('editProfileForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            mensajeEdicionDiv.innerHTML = '';
            mensajeEdicionDiv.className = '';

            const nombre = document.getElementById('nombre').value;
            const apellido = document.getElementById('apellido').value;
            const correo = document.getElementById('correo').value;
            const nuevaContrasena = document.getElementById('nuevaContrasena').value;
            const rol = rolSelect.value; // Solo si es admin

            let updatedUser = {
                id: parseInt(userIdField.value),
                nombre: nombre,
                apellido: apellido,
                correo: correo,
                hashContrasena: hashContrasenaField.value // Mantener el hash existente por defecto
            };

            // Si es admin, puede enviar el rol modificado
            if (loggedInUserRole === 'Administrador') {
                updatedUser.rol = rol;
                
            }
            // Si viene una nueva contraseña, la usa
            if (nuevaContrasena === "") {
                updatedUser.hashContrasena = nuevaContrasena;
            }

            try {
                const response = await fetch(`${API_USUARIOS_URL}/ModificarUsuario/${updatedUser.id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(updatedUser)
                });

                if (response.ok) {
                    mensajeEdicionDiv.className = 'alert alert-success';
                    mensajeEdicionDiv.innerHTML = `Perfil actualizado exitosamente.`;
                    // Actualiza el localStorage cuando se edita su propio perfil
                    const loggedInUserData = getLoggedInUserData();
                    if (loggedInUserData && loggedInUserData.id === updatedUser.id) {
                        loggedInUserData.nombre = updatedUser.nombre;
                        loggedInUserData.apellido = updatedUser.apellido;
                        loggedInUserData.correo = updatedUser.correo;
                        // solo si es admin
                        if (loggedInUserRole === 'Administrador') {
                             loggedInUserData.rol = updatedUser.rol;
                        }
                        localStorage.setItem('userData', JSON.stringify(loggedInUserData));
                        window.location.reload();
                    }
                    if (loggedInUserRole === 'Administrador' && currentUserId !== loggedInUserData.id) {
                        setTimeout(() => window.location.href = '/Usuario/Colaborador', 3000);
                    }
                } else {
                    const errorData = await response.json();
                    mensajeEdicionDiv.className = 'alert alert-danger';
                    let errorMessage = 'Error al actualizar perfil: ';
                    if (response.status === 400 && errorData.errors) {
                        for (const key in errorData.errors) {
                            errorMessage += `${key}: ${errorData.errors[key].join(', ')} `;
                        }
                    } else {
                        errorMessage += errorData.title || errorData.detail || JSON.stringify(errorData);
                    }
                    mensajeEdicionDiv.innerHTML = errorMessage;
                }
            } catch (error) {
                mensajeEdicionDiv.className = 'alert alert-danger';
                mensajeEdicionDiv.innerHTML = `Ocurrió un error de red: ${error.message}.`;
                
            }
        });
    </script>
}